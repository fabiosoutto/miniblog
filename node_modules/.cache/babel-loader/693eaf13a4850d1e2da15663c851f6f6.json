{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useReducer } from 'react';\nimport { db } from '../firebase/config';\nimport { updateDoc, doc } from 'firebase/firestore';\nconst initialState = {\n  loading: null,\n  error: null\n};\n\nconst updateReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOADING\":\n      return {\n        loading: true,\n        error: null\n      };\n\n    case \"UPDATED_DOC\":\n      return {\n        loading: false,\n        error: null\n      };\n\n    case \"ERROR\":\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const useUpdateDocument = docCollection => {\n  _s();\n\n  const [response, dispatch] = useReducer(updateReducer, initialState); // deal with memory leak\n\n  const [cancelled, setCancelled] = useState(false);\n\n  const checkCancelBeforeDispatch = action => {\n    if (!cancelled) {\n      dispatch(action);\n    }\n  };\n\n  const updateDocument = async (uid, data) => {\n    checkCancelBeforeDispatch({\n      type: \"LOADING\"\n    });\n\n    try {\n      const docRef = await doc(db, docCollection, uid);\n      const updatedDocument = await updateDoc(docRef, data);\n      checkCancelBeforeDispatch({\n        type: \"UPDATED_DOC\",\n        payload: updatedDocument\n      });\n    } catch (error) {\n      checkCancelBeforeDispatch({\n        type: \"ERROR\",\n        payload: error.message\n      });\n    }\n  };\n\n  useEffect(() => {\n    return () => setCancelled(true);\n  }, []);\n  return {\n    updateDocument,\n    response\n  };\n};\n\n_s(useUpdateDocument, \"aGpufD8as+miNYZKmGUYm2CUF6M=\");","map":{"version":3,"names":["useState","useEffect","useReducer","db","updateDoc","doc","initialState","loading","error","updateReducer","state","action","type","payload","useUpdateDocument","docCollection","response","dispatch","cancelled","setCancelled","checkCancelBeforeDispatch","updateDocument","uid","data","docRef","updatedDocument","message"],"sources":["C:/xampp/htdocs/Curso ReactJS/Curso ReactJS - Matheus Battisti/Projetos ReactJS/miniblog/src/hooks/useUpdateDocument.js"],"sourcesContent":["import {useState, useEffect, useReducer} from 'react';\r\nimport {db} from '../firebase/config';\r\nimport { updateDoc, doc } from 'firebase/firestore';\r\n\r\n\r\nconst initialState = {\r\n    loading: null,\r\n    error: null\r\n};\r\n\r\nconst updateReducer = (state, action) => {\r\n    switch(action.type) {\r\n\r\n        case \"LOADING\":\r\n            return {loading: true, error: null};\r\n        case \"UPDATED_DOC\":\r\n            return {loading: false, error: null};\r\n        case \"ERROR\":\r\n            return {loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const useUpdateDocument = (docCollection) => {\r\n\r\n    const [response, dispatch] = useReducer(updateReducer, initialState);\r\n\r\n    // deal with memory leak\r\n    const [cancelled, setCancelled] = useState(false);\r\n\r\n    const checkCancelBeforeDispatch = (action) => {\r\n        if(!cancelled) {\r\n            dispatch(action);\r\n        }\r\n    };\r\n\r\n    const updateDocument = async(uid, data) => {\r\n        checkCancelBeforeDispatch({\r\n            type: \"LOADING\",\r\n        });\r\n\r\n        try {\r\n\r\n            const docRef = await doc(db, docCollection, uid);\r\n\r\n            const updatedDocument = await updateDoc(docRef, data);\r\n            \r\n            checkCancelBeforeDispatch({\r\n                type: \"UPDATED_DOC\",\r\n                payload: updatedDocument,\r\n            });\r\n\r\n        } catch (error) {\r\n\r\n            checkCancelBeforeDispatch({\r\n                type: \"ERROR\",\r\n                payload: error.message,\r\n            });\r\n            \r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        return () => setCancelled(true);\r\n    }, []);\r\n\r\n    return{updateDocument, response};\r\n};"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,EAA6BC,UAA7B,QAA8C,OAA9C;AACA,SAAQC,EAAR,QAAiB,oBAAjB;AACA,SAASC,SAAT,EAAoBC,GAApB,QAA+B,oBAA/B;AAGA,MAAMC,YAAY,GAAG;EACjBC,OAAO,EAAE,IADQ;EAEjBC,KAAK,EAAE;AAFU,CAArB;;AAKA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,QAAOA,MAAM,CAACC,IAAd;IAEI,KAAK,SAAL;MACI,OAAO;QAACL,OAAO,EAAE,IAAV;QAAgBC,KAAK,EAAE;MAAvB,CAAP;;IACJ,KAAK,aAAL;MACI,OAAO;QAACD,OAAO,EAAE,KAAV;QAAiBC,KAAK,EAAE;MAAxB,CAAP;;IACJ,KAAK,OAAL;MACI,OAAO;QAACD,OAAO,EAAE,KAAV;QAAiBC,KAAK,EAAEG,MAAM,CAACE;MAA/B,CAAP;;IACJ;MACI,OAAOH,KAAP;EATR;AAWH,CAZD;;AAcA,OAAO,MAAMI,iBAAiB,GAAIC,aAAD,IAAmB;EAAA;;EAEhD,MAAM,CAACC,QAAD,EAAWC,QAAX,IAAuBf,UAAU,CAACO,aAAD,EAAgBH,YAAhB,CAAvC,CAFgD,CAIhD;;EACA,MAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,KAAD,CAA1C;;EAEA,MAAMoB,yBAAyB,GAAIT,MAAD,IAAY;IAC1C,IAAG,CAACO,SAAJ,EAAe;MACXD,QAAQ,CAACN,MAAD,CAAR;IACH;EACJ,CAJD;;EAMA,MAAMU,cAAc,GAAG,OAAMC,GAAN,EAAWC,IAAX,KAAoB;IACvCH,yBAAyB,CAAC;MACtBR,IAAI,EAAE;IADgB,CAAD,CAAzB;;IAIA,IAAI;MAEA,MAAMY,MAAM,GAAG,MAAMnB,GAAG,CAACF,EAAD,EAAKY,aAAL,EAAoBO,GAApB,CAAxB;MAEA,MAAMG,eAAe,GAAG,MAAMrB,SAAS,CAACoB,MAAD,EAASD,IAAT,CAAvC;MAEAH,yBAAyB,CAAC;QACtBR,IAAI,EAAE,aADgB;QAEtBC,OAAO,EAAEY;MAFa,CAAD,CAAzB;IAKH,CAXD,CAWE,OAAOjB,KAAP,EAAc;MAEZY,yBAAyB,CAAC;QACtBR,IAAI,EAAE,OADgB;QAEtBC,OAAO,EAAEL,KAAK,CAACkB;MAFO,CAAD,CAAzB;IAKH;EAEJ,CAzBD;;EA2BAzB,SAAS,CAAC,MAAM;IACZ,OAAO,MAAMkB,YAAY,CAAC,IAAD,CAAzB;EACH,CAFQ,EAEN,EAFM,CAAT;EAIA,OAAM;IAACE,cAAD;IAAiBL;EAAjB,CAAN;AACH,CA7CM;;GAAMF,iB"},"metadata":{},"sourceType":"module"}