{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useReducer } from 'react';\nimport { db } from '../firebase/config';\nimport { collection, addDoc, Timestamp } from 'firebase/firestore';\nconst initialState = {\n  loading: null,\n  error: null\n};\n\nconst insertReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOADING\":\n      return {\n        loading: true,\n        error: null\n      };\n\n    case \"INSERTED_DOC\":\n      return {\n        loading: false,\n        error: null\n      };\n\n    case \"ERROR\":\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const useInsertDocument = docCollection => {\n  _s();\n\n  const [response, dispatch] = useReducer(insertReducer, initialState); // deal with memory leak\n\n  const [cancelled, setCancelled] = useState(false);\n\n  const checkCancelBeforeDispatch = action => {\n    if (!cancelled) {\n      dispatch(action);\n    }\n  };\n\n  const insertDocument = async document => {\n    checkCancelBeforeDispatch({\n      type: \"LOADING\"\n    });\n\n    try {\n      const newDocument = { ...document,\n        createdAt: Timestamp.now()\n      };\n      const insertDocument = await addDoc(collection(db, docCollection), newDocument);\n      checkCancelBeforeDispatch({\n        type: \"INSERTED_DOC\",\n        payload: insertDocument\n      });\n    } catch (error) {\n      checkCancelBeforeDispatch({\n        type: \"ERROR\",\n        payload: error.message\n      });\n    }\n  };\n\n  useEffect(() => {\n    return () => setCancelled(true);\n  }, []);\n  return {\n    insertDocument,\n    response\n  };\n};\n\n_s(useInsertDocument, \"aGpufD8as+miNYZKmGUYm2CUF6M=\");","map":{"version":3,"names":["useState","useEffect","useReducer","db","collection","addDoc","Timestamp","initialState","loading","error","insertReducer","state","action","type","payload","useInsertDocument","docCollection","response","dispatch","cancelled","setCancelled","checkCancelBeforeDispatch","insertDocument","document","newDocument","createdAt","now","message"],"sources":["C:/xampp/htdocs/Curso ReactJS/Curso ReactJS - Matheus Battisti/Projetos ReactJS/miniblog/src/hooks/useInsertDocument.js"],"sourcesContent":["import {useState, useEffect, useReducer} from 'react';\r\nimport {db} from '../firebase/config';\r\nimport { collection, addDoc, Timestamp } from 'firebase/firestore';\r\n\r\n\r\nconst initialState = {\r\n    loading: null,\r\n    error: null\r\n};\r\n\r\nconst insertReducer = (state, action) => {\r\n    switch(action.type) {\r\n\r\n        case \"LOADING\":\r\n            return {loading: true, error: null};\r\n        case \"INSERTED_DOC\":\r\n            return {loading: false, error: null};\r\n        case \"ERROR\":\r\n            return {loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const useInsertDocument = (docCollection) => {\r\n\r\n    const [response, dispatch] = useReducer(insertReducer, initialState);\r\n\r\n    // deal with memory leak\r\n    const [cancelled, setCancelled] = useState(false);\r\n\r\n    const checkCancelBeforeDispatch = (action) => {\r\n        if(!cancelled) {\r\n            dispatch(action);\r\n        }\r\n    };\r\n\r\n    const insertDocument = async(document) => {\r\n        checkCancelBeforeDispatch({\r\n            type: \"LOADING\",\r\n        });\r\n\r\n        try {\r\n            \r\n            const newDocument = {...document, createdAt: Timestamp.now()}\r\n\r\n            const insertDocument = await addDoc(\r\n                collection(db, docCollection),\r\n                newDocument\r\n            )\r\n\r\n            checkCancelBeforeDispatch({\r\n                type: \"INSERTED_DOC\",\r\n                payload: insertDocument\r\n            });\r\n\r\n        } catch (error) {\r\n\r\n            checkCancelBeforeDispatch({\r\n                type: \"ERROR\",\r\n                payload: error.message,\r\n            });\r\n            \r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        return () => setCancelled(true);\r\n    }, []);\r\n\r\n    return{insertDocument, response};\r\n};"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,EAA6BC,UAA7B,QAA8C,OAA9C;AACA,SAAQC,EAAR,QAAiB,oBAAjB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,SAA7B,QAA8C,oBAA9C;AAGA,MAAMC,YAAY,GAAG;EACjBC,OAAO,EAAE,IADQ;EAEjBC,KAAK,EAAE;AAFU,CAArB;;AAKA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,QAAOA,MAAM,CAACC,IAAd;IAEI,KAAK,SAAL;MACI,OAAO;QAACL,OAAO,EAAE,IAAV;QAAgBC,KAAK,EAAE;MAAvB,CAAP;;IACJ,KAAK,cAAL;MACI,OAAO;QAACD,OAAO,EAAE,KAAV;QAAiBC,KAAK,EAAE;MAAxB,CAAP;;IACJ,KAAK,OAAL;MACI,OAAO;QAACD,OAAO,EAAE,KAAV;QAAiBC,KAAK,EAAEG,MAAM,CAACE;MAA/B,CAAP;;IACJ;MACI,OAAOH,KAAP;EATR;AAWH,CAZD;;AAcA,OAAO,MAAMI,iBAAiB,GAAIC,aAAD,IAAmB;EAAA;;EAEhD,MAAM,CAACC,QAAD,EAAWC,QAAX,IAAuBhB,UAAU,CAACQ,aAAD,EAAgBH,YAAhB,CAAvC,CAFgD,CAIhD;;EACA,MAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,KAAD,CAA1C;;EAEA,MAAMqB,yBAAyB,GAAIT,MAAD,IAAY;IAC1C,IAAG,CAACO,SAAJ,EAAe;MACXD,QAAQ,CAACN,MAAD,CAAR;IACH;EACJ,CAJD;;EAMA,MAAMU,cAAc,GAAG,MAAMC,QAAN,IAAmB;IACtCF,yBAAyB,CAAC;MACtBR,IAAI,EAAE;IADgB,CAAD,CAAzB;;IAIA,IAAI;MAEA,MAAMW,WAAW,GAAG,EAAC,GAAGD,QAAJ;QAAcE,SAAS,EAAEnB,SAAS,CAACoB,GAAV;MAAzB,CAApB;MAEA,MAAMJ,cAAc,GAAG,MAAMjB,MAAM,CAC/BD,UAAU,CAACD,EAAD,EAAKa,aAAL,CADqB,EAE/BQ,WAF+B,CAAnC;MAKAH,yBAAyB,CAAC;QACtBR,IAAI,EAAE,cADgB;QAEtBC,OAAO,EAAEQ;MAFa,CAAD,CAAzB;IAKH,CAdD,CAcE,OAAOb,KAAP,EAAc;MAEZY,yBAAyB,CAAC;QACtBR,IAAI,EAAE,OADgB;QAEtBC,OAAO,EAAEL,KAAK,CAACkB;MAFO,CAAD,CAAzB;IAKH;EAEJ,CA5BD;;EA8BA1B,SAAS,CAAC,MAAM;IACZ,OAAO,MAAMmB,YAAY,CAAC,IAAD,CAAzB;EACH,CAFQ,EAEN,EAFM,CAAT;EAIA,OAAM;IAACE,cAAD;IAAiBL;EAAjB,CAAN;AACH,CAhDM;;GAAMF,iB"},"metadata":{},"sourceType":"module"}